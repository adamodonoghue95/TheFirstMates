package poker;

import java.util.ArrayList;

public class GameOfPoker {
	private static ArrayList<PokerPlayer> gamePlayers = new ArrayList<PokerPlayer>();
	private DeckOfCards deck = new DeckOfCards();
	private int STATUS_ID;
	TwitterBot tbot;
	String username;
	boolean GameState;

	//CONSTRUCTOR FOR TWITTER BOT
	public GameOfPoker(int numberOfPlayers, TwitterBot twitterBot, String user) {
		tbot = twitterBot;
		username = user;
		gamePlayers.add(new PokerPlayer(deck, username));
		gamePlayers.add(new AutomatedPokerPlayer(deck,"Jack"));
		gamePlayers.add(new AutomatedPokerPlayer(deck,"Henry"));
		gamePlayers.add(new AutomatedPokerPlayer(deck,"Ron"));

	}

	// CONSTRUCTOR FOR TESTIGN GAMEPLAY
	public GameOfPoker(int numberOfPlayers){
		gamePlayers.add(new PokerPlayer(deck,"Luke"));
		gamePlayers.add(new AutomatedPokerPlayer(deck,"Jack"));
		gamePlayers.add(new AutomatedPokerPlayer(deck,"Henry"));
		gamePlayers.add(new AutomatedPokerPlayer(deck,"Ron"));
	}

	public boolean checkGameState(){
		for(int i=0; i<gamePlayers.size();i++){
			if(gamePlayers.get(i).getChips()<=0){
				gamePlayers.remove(i);
			}
			else{
				gamePlayers.get(i).inHand = true;
			}
		}
		if(gamePlayers.size()==1){
			System.out.println(gamePlayers.get(0).name + " is the winner!");
			return false;
		}

		else return true;
	}

	public void dealNewHands() {
		for (int i = 0; i < gamePlayers.size(); i++) {
			PokerPlayer player = gamePlayers.get(i);
			if(player.inHand){
				player.newHand(deck);
			}
		}
	}


	public void welcomeSection(String username){
		String firstTweet;
		firstTweet = "@"+username+"\nWelcome to TheFirstMates Poker Game!\n";
		firstTweet += "Let's Play Poker " + gamePlayers.get(0).name + "!";
		tbot.tweet(firstTweet);	
		System.out.println(firstTweet);
	}

	public void introSection(String username, long stat_ID, String content){
		HandOfPoker hand = new HandOfPoker(gamePlayers, this.deck);

		// Print chips
		tbot.tweet("@"+ username + "\n" + hand.printChips(username));
		System.out.println("@"+ username + "\n" + hand.printChips(username));

		// Print Hand
		tbot.tweet("@"+ username + "\n" + hand.printHumanHand());
		System.out.println("@"+ username + "\n" + hand.printHumanHand());

		// Ask to fold
		tbot.tweet("@"+ username + "\nWould you like to fold? (y/ n to call, cost to call:" + hand.currentCall + ")");
		System.out.println("@"+ username + "\nWould you like to fold? (y/ n to call, cost to call:" + hand.currentCall + ")");

		System.out.println("\nFINISH INTRO SECTION");
	}

	public void foldSection(String username){

	}

	//	public void gamePlay(){
	//		
	//		/* First four lines are for the twitter output, need to fix the small game play
	//		 * errors first*/
	//		
	////		String firstTweet;
	////		String secondTweet;
	////		firstTweet = "@"+username+" Welcome to TheFirstMates Poker Game!\n";
	////		firstTweet+= "\nLet's Play Poker " + gamePlayers.get(0).name + "!";		
	////		tbot.tweet(firstTweet);
	//		
	//		
	//		System.out.println("Welcome to TheFirstMates Poker Game!\n");
	//		System.out.println("\nLet's Play Poker " + gamePlayers.get(0).name + "!");
	//		
	//		while(this.checkGameState()){
	//						
	//			HandOfPoker hand = new HandOfPoker(gamePlayers, this.deck);
	//			hand.printChips();
	//
	//			hand.printHumanHand()
	//
	//			do {
	//				// Let players fold and start betting
	//				System.out.println("\nFIRST ROUND OF BETTING\n-----------------");
	//				hand.roundOfBetting();
	//				
	//				// Skips next round of betting if only one player left
	//				//System.out.println(hand.noOfPlayers());
	//				if (hand.noOfPlayers() == 1){
	//					System.out.println("Nobody calls");
	//					break;
	//				}
	//				
	//				//Let players discard their cards
	//				hand.discardCards();
	//				hand.printHumanHand();
	//				
	//				//Complete second round of betting
	//				System.out.println("\nSECOND ROUND OF BETTING\n-----------------");
	//				hand.roundOfBetting();
	//				
	//				//Show cards
	//				hand.showCards();
	//				
	//			} while(false);
	//
	//			//Show Cards
	//			
	//			hand.decideWinner();
	//			
	//			// Lets players give all cards back and dealt new hands
	//			hand.returnHands();
	//			
	//			// Reset and shuffle deck
	//			this.deck.reset();
	//			this.deck.shuffle();
	//			
	//			// Deal new Hands for next round
	//			this.dealNewHands();
	//		}
	//
	//		//hand.printChips();
	//
	//
	//	}

	public static void main(String [] args) {

		GameOfPoker gm = new GameOfPoker(4);
		//gm.gamePlay();

	}

}
